{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This Template creates an SNS topic that can send messages to a PostTimeliness SQS queue with appropriate permissions for one IAM user to publish to the topic (PublishUser) and another to read messages from the queues. TopicPolicy assigns that permission to PublishUser. QueueUser is an IAM user that can read messages from the two SQS queues. QueuePolicy assigns those permissions to QueueUser. It also assigns permission for the SNS Topic to publish its notifications to the queue. ***Warning*** you will be billed for the AWS resources used if you create a stack from this template.",
    "Parameters": {
      "PublishUserPassword": {
        "NoEcho": "true",
        "Type": "String",
        "Description": "Password for the IAM user PublishUser",
        "MinLength": "1",
        "MaxLength": "41",
        "AllowedPattern": "[a-zA-Z0-9]*",
        "ConstraintDescription": "must contain only alphanumeric characters."
      },
      "QueueUserPassword": {
        "NoEcho": "true",
        "Type": "String",
        "Description": "Password for the IAM user QueueUser",
        "MinLength": "1",
        "MaxLength": "41",
        "AllowedPattern": "[a-zA-Z0-9]*",
        "ConstraintDescription": "must contain only alphanumeric characters."
      }
    },
    "Resources": {
      "timelinessLambdaFunction": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
            "Code": { "S3Bucket": "bereal", "S3Key": "timeliness/app.zip" },
            "Handler": "app.app",
            "Role": { "Fn::GetAtt": ["LambdaExecutionRole", "Arn"] },
            "Runtime": "python3.11",
            "Timeout": 60,
            "MemorySize": 512
        }
    },
   "timelinessLambdaFunctionEventSourceMapping": {
    "Type": "AWS::Lambda::EventSourceMapping",
    "Properties": {
      "BatchSize": 10,
      "Enabled": true,
      "EventSourceArn": {"Fn::GetAtt": ["PostTimelinessQueue", "Arn"]},
      "FunctionName": { "Fn::GetAtt": ["timelinessLambdaFunction", "Arn"] }
    }
  },
      "LambdaExecutionRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": { "Service": ["lambda.amazonaws.com"] },
                "Action": ["sts:AssumeRole"]
              }
            ]
          },
          "Policies": [
            {
              "PolicyName": "allowLambdaLogs",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": ["logs:*"],
                    "Resource": "arn:aws:logs:*:*:*"
                  }
                ]
              }
            },
            {
              "PolicyName": "allowSqs",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "logs:*",
                      "sqs:ReceiveMessage",
                      "sqs:DeleteMessage",
                      "sqs:GetQueueAttributes",
                      "sqs:ChangeMessageVisibility"
                    ],
                    "Resource": [
                      "arn:aws:sqs::851725573367:*"
                    ]
                  }
                ]
              }
            }
          ]
        }
      },
      "PublishUser": {
        "Type": "AWS::IAM::User",
        "Properties": {
          "LoginProfile": { "Password": { "Ref": "PublishUserPassword" } }
        }
      },
      "PublishUserKey": {
        "Type": "AWS::IAM::AccessKey",
        "Properties": { "UserName": { "Ref": "PublishUser" } }
      },
      "PublishTopicGroup": {
        "Type": "AWS::IAM::Group",
        "Properties": {
          "Policies": [
            {
              "PolicyName": "TopicGroupPolicy",
              "PolicyDocument": {
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": ["sns:Publish"],
                    "Resource": { "Ref": "SNSNewPostTopic" }
                  }
                ]
              }
            }
          ]
        }
      },
      "AddUserToPublishTopicGroup": {
        "Type": "AWS::IAM::UserToGroupAddition",
        "Properties": {
          "GroupName": { "Ref": "PublishTopicGroup" },
          "Users": [{ "Ref": "PublishUser" }]
        }
      },
      "QueueUser": {
        "Type": "AWS::IAM::User",
        "Properties": {
          "LoginProfile": { "Password": { "Ref": "QueueUserPassword" } }
        }
      },
      "QueueUserKey": {
        "Type": "AWS::IAM::AccessKey",
        "Properties": { "UserName": { "Ref": "QueueUser" } }
      },
      "RDMessageQueueGroup": {
        "Type": "AWS::IAM::Group",
        "Properties": {
          "Policies": [
            {
              "PolicyName": "QueueGroupPolicy",
              "PolicyDocument": {
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": ["sqs:DeleteMessage", "sqs:ReceiveMessage"],
                    "Resource": [
                      "arn:aws:sqs::851725573367:*"
                    ]
                  }
                ]
              }
            }
          ]
        }
      },
      "AddUserToQueueGroup": {
        "Type": "AWS::IAM::UserToGroupAddition",
        "Properties": {
          "GroupName": { "Ref": "RDMessageQueueGroup" },
          "Users": [{ "Ref": "QueueUser" }]
        }
      },
      "QueuePolicy": {
        "Type": "AWS::SQS::QueuePolicy",
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": { "Service": "sns.amazonaws.com" },
                "Action": ["sqs:SendMessage"],
                "Resource": ["*"],
                "Condition": {
                  "ArnEquals": { "aws:SourceArn": { "Ref": "SNSNewPostTopic" } }
                }
              }
            ]
          },
          "Queues": [
            "arn:aws:sqs::851725573367:*"
          ]
        }
      }
    },

    "Outputs": {
      "SNSTopicTopicARN": { "Value": { "Ref": "SNSNewPostTopic" } },
      "PublishUserInfo": {
        "Value": {
          "Fn::Join": [
            " ",
            [
              "ARN:",
              { "Fn::GetAtt": ["PublishUser", "Arn"] },
              "Access Key:",
              { "Ref": "PublishUserKey" },
              "Secret Key:",
              { "Fn::GetAtt": ["PublishUserKey", "SecretAccessKey"] }
            ]
          ]
        }
      },
      "QueueUserInfo": {
        "Value": {
          "Fn::Join": [
            " ",
            [
              "ARN:",
              { "Fn::GetAtt": ["QueueUser", "Arn"] },
              "Access Key:",
              { "Ref": "QueueUserKey" },
              "Secret Key:",
              { "Fn::GetAtt": ["QueueUserKey", "SecretAccessKey"] }
            ]
          ]
        }
      }
    }
  }